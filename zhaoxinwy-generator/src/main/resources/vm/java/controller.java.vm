package ${packageName}.controller;

import java.util.List;
import java.util.Arrays;
import java.util.concurrent.TimeUnit;

import lombok.RequiredArgsConstructor;
import javax.servlet.http.HttpServletResponse;
import javax.validation.constraints.*;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import com.zhaoxinms.common.annotation.RepeatSubmit;
import com.zhaoxinms.common.annotation.Log;
import com.zhaoxinms.common.core.validate.AddGroup;
import com.zhaoxinms.common.core.validate.EditGroup;
import com.zhaoxinms.common.core.validate.QueryGroup;
import com.zhaoxinms.common.enums.BusinessType;
import com.zhaoxinms.common.utils.poi.ExcelUtil;
import com.zhaoxinms.base.ActionResult;
import com.zhaoxinms.base.exception.DataException;
import com.zhaoxinms.base.util.JsonUtil;
import com.zhaoxinms.base.util.UserProvider;
import com.zhaoxinms.base.vo.PageListVO;
import com.zhaoxinms.base.vo.PaginationVO;
import com.zhaoxinms.common.core.domain.entity.SysUser;
import ${packageName}.entity.${ClassName};
import ${packageName}.entity.vo.${ClassName}Vo;
import ${packageName}.entity.bo.${ClassName}Bo;
import ${packageName}.entity.pagination.${ClassName}Pagination;
import ${packageName}.service.I${ClassName}Service;
#if($table.crud || $table.sub)
import com.zhaoxinms.common.core.page.TableDataInfo;
#elseif($table.tree)
#end
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiOperation;
/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller
{

	@Autowired
    private UserProvider userProvider;

    @Autowired
    private I${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:list')")
    @GetMapping("/list")
#if($table.crud || $table.sub)
    public ActionResult list(${ClassName}Pagination ${className}Pagination) {
        List<${ClassName}> list = ${className}Service.getList(${className}Pagination);
        List<${ClassName}Vo> listVO = JsonUtil.getJsonToList(list, ${ClassName}Vo.class);
        PageListVO vo = new PageListVO();
        vo.setList(listVO);
        PaginationVO page = JsonUtil.getJsonToBean(${className}Pagination, PaginationVO.class);
        vo.setPagination(page);
        return ActionResult.success(vo);
    }
#elseif($table.tree)
    public AjaxResult list(${ClassName} ${className})
    {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return AjaxResult.success(list);
    }
#end

    /**
     * 获取${functionName}详细信息
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:query')")
    @GetMapping(value = "/{${pkColumn.javaField}}")
 	public ActionResult<${ClassName}Vo> info(@PathVariable("id") String id) {
        ${ClassName} entity = ${className}Service.getInfo(id);
        ${ClassName}Vo vo = JsonUtil.getJsonToBean(entity, ${ClassName}Vo.class);
        return ActionResult.success(vo);
    }

    /**
     * 新增${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:add')")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    @Transactional
    public ActionResult create(@Validated(AddGroup.class) @RequestBody ${ClassName}Bo bo) throws DataException {
        SysUser userInfo = userProvider.get();
        ${ClassName} entity = JsonUtil.getJsonToBean(bo, ${ClassName}.class);
        ${className}Service.create(entity);
        return ActionResult.success("新建成功");
    }

    /**
     * 修改${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:edit')")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping("/{id}")
    @Transactional
    public ActionResult update(@PathVariable("id") String id, @Validated(EditGroup.class) @RequestBody ${ClassName}Bo bo)
        throws DataException {
        ${ClassName} entity = JsonUtil.getJsonToBean(bo, ${ClassName}.class);
        ${className}Service.update(id, entity);
        return ActionResult.success("更新成功");
    }

    /**
     * 删除${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:remove')")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
	@DeleteMapping("/{id}")
	@Transactional
    public ActionResult delete(@PathVariable("id") String id) {
        ${ClassName} entity = ${className}Service.getInfo(id);
        if (entity != null) {
            ${className}Service.delete(entity);
        }
        return ActionResult.success("删除成功");
    }
}
